# Default values for default-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  tag: 1.23.0
  pullPolicy: IfNotPresent


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  containerPort: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10
readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

persistence:
  enabled: false
  volumes: []
#    - name: fichiers
#      size: 10Gi
#      mountPoint: /opt/apps/fichiers
#      accessMode: ReadWriteMany
#      storageClass: ""
#      annotations:
#        cnieg.fr/samba-share: "true"
#    - name: temp
#      size: 2Gi
#      mountPoint: /opt/apps/temp
#      accessMode: ReadWriteMany
#      storageClass: nfs-client
#      annotations: {}
#    - name: cacerts
#      secretName: cacerts
#      mountPoint: /usr/local/openjdk-11/lib/security/cacerts
#      subPath: cacerts
#      readOnly: true

podDisruptionBudget:
  enabled: false
  rule:
    type: minAvailable
    value: 1

hpa:
  enabled: false
  maxReplicas: 4
  cpuMax: 85
  memoryMax: 85

nodeSelector: {}

tolerations: []

affinity: {}
