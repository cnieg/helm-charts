apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "h2-database.name" . }}
  labels:
{{ include "h2-database.labels" . | indent 4 }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "h2-database.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "h2-database.name" . }}
        release: {{ .Release.Name }}
      annotations:
        imageDigest: "{{ .Values.image.digest }}"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value :=  .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          ports:
            - name: db
              containerPort: 1521
              protocol: TCP
            - name: ui
              containerPort: 81
          livenessProbe:
            tcpSocket:
              port: db
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            tcpSocket:
              port: db
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
    {{ toYaml . | indent 8 }}
  {{- end }}
